\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename records.info
@settitle Online Records
@c UPDATE THIS DATE WHENEVER YOU MAKE CHANGES!
@c For double-sided printing, uncomment:
@c @setchapternewpage odd
@setchapternewpage off
@c %**end of header

@syncodeindex fn cp

@include version.texi

@iftex
@finalout
@end iftex

@ifinfo
@format
START-INFO-DIR-ENTRY
* Records: (records).        Records: personal diary software
END-INFO-DIR-ENTRY
@end format
@end ifinfo


@ifinfo
Records
Copyright (C) 1995-2000 Ashvin Goel.
Copyright (C) 2009 Xavier Maillard.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).
@end ignore

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one, and provided that the privacy
of any reader of the resulting derived work is respected. In particular
is it strictly forbidden to make this documentation available on a World
Wide Web server which deals cookies. However, keeping access statistics
is allowed.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Free Software Foundation.
@end ifinfo

@titlepage
@title Records-Mode
@subtitle Personal diary software
@subtitle Edition @value{EDITION}, for Records version @value{VERSION}
@subtitle @value{UPDATED}
@author by Ashvin Goel
@page

@vskip 0pt plus 1filll
Copyright @copyright{} 1995-2000 Ashvin Goel.
Copyright @copyright{} 2009 Xavier Maillard.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one and provided that the privacy of
any reader of the resulting derived work is respected. In particular is
it strictly forbidden to make this documentation available on a World
Wide Web server which deals cookies. However, keeping access statistics
is allowed.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Free Software Foundation.

@end titlepage

@ifnottex
@node Top, Location, (dir), (dir)
@end ifnottex

@chapter Introduction

The @emph{records-mode} for Emacs allows creation of an online
diary. Users can create records in their diary for different subjects
each day. Records provides linking and indexing facilities so that users
can easily collect their thoughts on a subject over a period of
time. For instance, it is easy to find out whether you were thinking of
quitting school two months back! Records provides a reminder service by
collecting your list of 'to do' things. A simple integration with the
Emacs calendar is also available.

This is edition @value{EDITION} of the documentation for records-mode
version @value{VERSION} and was last updated on @value{UPDATED}.

@menu
* Location::                    Where to find records.
* Installation::                Installing records.
* Tutorial::                    A real short tutorial to get you started.
* Basic Use::                   Simple commands for creating your diary.
* Advanced Use::                The more esoteric commands.
* Conclusion::                  Conclusions and acknowledgments.
* Variable Index::              Variable Index.
* Concept Index::               Concept and Function Index.
* Key Index::                   Key Index.
@end menu

@node Location, Installation, Top, Top
@chapter Where to get records
@cindex Location
@cindex Download

You can get the latest version of records from
@uref{http://launchpad.net/records/+download}.

@node Installation, Tutorial, Location, Top
@chapter Installation
@cindex Installation

The steps below will help you install records.  The installation of
records is also documented in the README and the INSTALL file available
with the distribution. The number of steps in the install (or the amount 
of text below) seems to be ungodly! Panic not, almost everything in
the install is automated. Much of the text below is only explaining what 
the install is doing (or not doing) to your computer!

The install procedure makes the byte compiled elisp files, reads in the
user settings for records and installs these settings into the records
initialization file @file{~/.emacs-records}. This initialization file is
read by Emacs and the records administration program
(@file{recordsadmin}). Install also adds the loading of
@file{~/.emacs-records} into your @file{~/.emacs}. When you start Emacs,
all the records defaults will be automatically loaded.

@enumerate
@item
Since you are reading this file, you have untarred the gzip'ed file. The
elisp files in the current directory (in which you are right now) will
@emph{not} be installed in any other directory, and installation will
automatically add the current directory to the load path in Emacs. So if
you wish to move the records software to some other Emacs related
directory, now is the time to do it.

@item
If you are installing records on Windows, read INSTALL-NT first.

@item
Run @code{./configure} or @code{./configure --enable-xemacs}

The @code{--enable-xemacs} flag ensures that the elisp files are
compiled using @code{xemacs}. You MUST use this option if you use
@code{xemacs}.

The configure is provided in the source directory (do not run your own
configure).  If you want to specify the directory in which
@file{recordsadmin} (a Perl script) should be installed, you should run

@code{./configure --prefix $HOME}

Make sure @code{$@{bindir@}} (generally @code{$@{prefix@}/bin}) in the
Makefile exists and is writable by you.

Note: if you are getting source from CVS, you will have to generate
@code{./configure} by running @code{autoconf} first.

@item
Run @code{make install} (or just @code{make})

Make compiles the lisp files and then interactively asks for the user
defaults. Note that the lisp files are not installed anywhere.

@item
The changes to your system that @code{make install} does are the following:

@enumerate
@item
Adds @file{~/.emacs-records} (if this file already exists, it converts
only specific parts of the file).

@item
Adds a couple of lines to @file{~/.emacs}

@item
Adds @file{recordsadmin} to @code{$@{bindir@}} (if you invoked
@code{make install}).

@item 
Creates your records directory (@file{~/records} or whatever you have
specified during @code{make}) and adds some indexes there. If this
directory already exists, then it re-indexes your records and converts
them to the new format. If you don't trust the conversion, I would
suggest that you KEEP A COPY OF YOUR RECORDS BEFORE DOING THE
CONVERSION. Check the conversion by hand to make sure that the
conversion is fine. Specially look for the following: HAVE EMBEDDED
LINKS IN YOUR RECORDS BEEN CONVERTED CORRECTLY. Please tell me if this
conversion is not okay.

@end enumerate

@item
Copy the next set of lines from @samp{;;;; records-mode} to @samp{;;;;
records-mode end} into your @file{~/.emacs}. Make sure that these lines
occur after the following line (which has been automatically added
during install) in your @file{.emacs}.

@code{(load "~/.emacs-records")}

I did not automate this process since users may wish to change the key
settings. Users will probably use the records-goto-today function most
often. Bind the function to a simple key.
@format 
@t{
;;;; records-mode
; Define key bindings for functions called from outside records mode

; The preferred binding for records-goto-today - uncomment to use it
(define-key global-map [?\C-c ?n] 'records-goto-today)
(define-key global-map [?\C-c ?-] 'records-underline-line)

; The Ctrl-x n map
(define-key global-map [?\C-x ?n ?t] 'records-goto-today)
(define-key global-map [?\C-x ?n ?r] 'records-insert-record-region)
(define-key global-map [?\C-x ?n ?b] 'records-insert-record-buffer)
(define-key global-map [?\C-x ?n ?l] 'records-insert-link)

; Hook up to the calendar mode
(add-hook 'calendar-load-hook 
	  (function
	   (lambda ()
	     (define-key calendar-mode-map "n" 
              'records-calendar-to-record))))

; Hook up to the latex mode
(add-hook 'LaTeX-mode-hook
          (function
           (lambda () 
             (define-key LaTeX-mode-map "\C-clw" 'records-widen-latex))))

;;;*** OPTIONAL ***;;;

; If you like abbrev mode 
(add-hook 'records-mode-hooks
    (function
     (lambda ()
       (abbrev-mode 1))))

; If you like to use auto filling and/or filladapt modes while 
; editing text. If you have these functions in the text-mode-hook,
; then you don't need them here. 
(add-hook 'records-mode-hooks 
      (function (lambda ()
                  (turn-on-auto-fill)
                  (turn-on-filladapt-mode)
                  )))

; Using imenu: imenu will invoke a popup menu of records subjects
; 1. In Xemacs:
; (define-key global-map [(shift button3)] 'imenu)
; 2. In gnu emacs:
; (define-key global-map [(shift mouse-3)] 'imenu)

; If you want to be brought to today's record on start up
(records-goto-today)

;;;; records-mode end}
@end format

@item 
The installation is complete. Restart your emacs (ya, I know that you
hate to restart emacs because it is your OS. Well you don't have to
restart emacs if you know how to evaluate regions in a buffer. In this
case, evaluate the key bindings and all the hooks defined above and load
in @file{~/.emacs-records}). Now that the installation is complete, you
are ready to start using records. First, read the short tutorial
(@pxref{Tutorial}) on getting started.

@end enumerate

@node Tutorial, Basic Use, Installation, Top
@chapter A Real Quick Tutorial
@cindex Tutorial

Here is a real short tutorial on getting started with records.

@enumerate

@item
Type key @kbd{C-c n} (for @code{records-goto-today}). This will get you
today's record file. If you are starting fresh, it will be empty.

@item 
A record file consists of records, each of which has a @dfn{subject}
and a @dfn{body}. To insert a record, type @kbd{C-c C-i}
(@code{records-insert-record}) or look for "Insert Record" in the
menu. Type in a subject in the modeline and press return. The record
subject will be added and you can start typing in the record body. You
can have spaces in subject titles. Look at the FAQ in the distribution.

@item 
Multiple records with different subjects can be added in each day's
record file. In fact the same subject can be added multiple times in
each day's record file.

@item
For much of the other functionality, look at the records menu. The menu
has been divided so that most of the functionality at the top of the
menu is related to records traversal (up, down, prev, next, goto
etc). The middle section adds, deletes and renames records. The last
section does administration tasks such as encryption, concatenation of
records by subject or days, etc. Make sure you look at the records TODO
facility (@pxref{Organizing your TODOs}).

@item
Remember that if you just have one record file (today's) then records
traversal's are not very useful!

@item 
The program @file{recordsadmin} has been provided in the distribution in
order to administer your records. You should not need to use
@file{recordsadmin} in normal records use. @file{recordsadmin} 1)
performs initialization (or re-initialization) of your records software,
2) allows changing the date format, 3) changing the directory structure,
and 4) recreation of records indexes if they are broken (for example if
your system crashes while emacs is updating your indexes).

@end enumerate

@node Basic Use, Advanced Use, Tutorial, Top
@chapter Basic Use

This section describes the basic functionality of the records mode.

@menu
* What is a Record::            How is a record represented?
* Record File::                 A set of records arranged by date.
* Record Traversal::            Traversing records.
* Records Index File::          Tracking records.
* Manipulating Records::        Adding, deleting records.
* Misc Commands::               Miscellaneous commands.
* Records Administration::      Administering your records.
@end menu

@node What is a Record, Record File, Basic Use, Basic Use
@section What is a Record?

A record is a thought, or an idea, or even a manuscript with a name. In
records-mode, the name of a record is called the @dfn{record
subject}. The contents of the record are called the @dfn{record body}.
Here, within double quotes, is an example of a record.
@format 
@t{
"
* Work
------
link: <../../99/04/042199#* Work>

Didn't do my experiments because I continued working on the records
documentation. Hope to start experiments tomorrow.

"}
@end format

@vindex records-use-font-lock
@vindex records-mode-font-lock-keywords
@vindex records-bold-face
@vindex records-subject-read-only
The records subject is @code{Work}. A subject starts with an asterisk
and a space and is always underlined. Below the underlining, a link
identifies the record. The link above shows that this record is
associated with the date April 21st, 1999. Note that there are many ways
in which dates can be represented in records (@pxref{Records
Administration}).

If the variable @code{records-use-font-lock} is set to true (the
default), the subject, records link and the TODO (@pxref{Organizing your
TODOs}) are fontified. You can modify the fontification by changing the
variable @code{records-mode-font-lock-keywords}. If the variable
@code{records-subject-read-only} is set to true (the default), the
subject is read-only, which disallows any accidental updates to a
records subject.

@node Record File, Record Traversal, What is a Record, Basic Use
@section What is a Record File?

A record file consists of a set of records associated with a given
date. For instance, a record file for April 21st, 1999 might contain a 
@code{Movies} record and two @code{Work} records. Simple isn't it!

@node  Record Traversal, Records Index File, Record File, Basic Use
@section Record Traversal

One of the promises made up-front about the records-mode is that it
allows easy linking and indexing of your personal ideas and thoughts. 
Records allows traversing records within a record file and across
files. 

@ftable @code
@item records-goto-today
Key @kbd{C-c n}. Go to the records file of today. This is probably the
first function you will be using with records.
@kindex C-c n

@item records-goto-up-record
Key @kbd{C-M-a}. Move to the previous record in the file.
@kindex C-M-a

@item records-goto-down-record
Key @kbd{C-M-e}. Move to the next record in the file.
@kindex C-M-e

@item records-goto-prev-record 
Key @kbd{C-c C-p}. Move to the previous record with the same subject. A
previous same-subject record can be on the same date (when there are two
or more records with the same subject on the same date) or it is
associated with a previous date. Think of all the records on a given
subject as a sequence sorted by date. This function moves back one step
in this sequence.
@kindex C-c C-p

@item records-goto-next-record 
Key @kbd{C-c C-n}. Move to the next record with the same subject. See
@code{records-goto-prev-record} for more details.
@kindex C-c C-n

@item records-goto-prev-record-file
Key @kbd{C-c C-b}. Go to the previous record file. Think of all the
record files as a sequence sorted by date. This function moves back one
step in this sequence.
@kindex C-c C-b

@item records-goto-next-record-file
Key @kbd{C-c C-f}. Move to the next record file. See
@code{records-goto-prev-record-file} for more details.
@kindex C-c C-f

@item records-goto-prev-day
Key @kbd{C-c C-y}. Go to the record file of the previous day
(yesterday). If a record file does not exist, one will be created.
@kindex C-c C-y

@item records-goto-next-day
Key @kbd{C-c C-t}. Go to the record file of the next day (tomorrow). If
a record file does not exist, one will be created.
@kindex C-c C-t

@item records-goto-link
Key @kbd{C-c C-g}. Goto the link around point in the records file. A
link in a records file must be enclosed within @kbd{<} and @kbd{>}. This
link can be a records link or a web link such as an http, FTP, gopher,
news message link. It can also be an html link like @uref{<a
href=http://www.yahoo.com>} or @uref{<http://www.yahoo.com>}. A records
link identifies a record (@pxref{What is a Record}). This record
identifier can be copied to any other record and this function used to
jump back to the record associated with the link.  For instance, if you
copied this link @uref{<../../99/04/042199#* Work>} into some other
record and then typed @kbd{C-c C-g} within the angle brackets, you would
be transported to the @code{Work} record of April 21st, 1999. When the
link is a web link, the link is handed off to
@code{browse-url-browser-function}. When the link is a news message
link, @code{deja.com} is searched for the news message.
@kindex C-c C-g

Note that C-g can be typed only after sometime has elapsed after typing
C-c or else the command gets aborted because of the behavior of
C-g. This is either an emacs bug or this binding ought to be changed.

@item records-goto-mouse-link
Key @kbd{Button2}. When mouse is clicked on a link, goto the link. See
@code{records-goto-link} for more details. When mouse is clicked
anywhere else, invoke the default mouse binding.
@kindex Button2

@item records-goto-last-record
Key @kbd{C-c C-l}. Go back to the last record file visited. Identical
record files are not put in the history consecutively.
@kindex C-c C-l

@item records-search-forward
Key @kbd{C-c C-s}. Search forward for regular expression in current
subject across record files.
@kindex C-c C-s

@item records-search-backward
Key @kbd{C-c C-r}. Search backward for regular expression in current
subject across record files. Note: this key binding belonged to
records-rename-record before version 1.4.6.
@kindex C-c C-r

@end ftable

@node Records Index File, Manipulating Records, Record Traversal, Basic Use
@section What is the Records Index File?

@findex records-goto-index 
A records index file allows the records-mode to keep track of your
records by date. The records index file can be accessed from within any
record by typing @kbd{C-c C-j} (@code{records-goto-index}). Typing the
same key sequence or typing @key{RET} will return you back to the
current record. In the records index file, you can find out the dates on
which you have written something about a subject. You can also type
@key{RET} on any subject and date and jump to the appropriate record.
TODO: The index file currently doesn't provide much functionality. Many
more things can be added here (such as deleting records directly from
the index file, greping within a subject, etc).
@kindex C-c C-j

@node Manipulating Records, Misc Commands, Records Index File, Basic Use
@section Adding, Deleting and Renaming Records

Records are manipulated with the following commands.

@ftable @code
@item records-insert-record
Key @kbd{C-c C-i}. Insert a new record for the current
date. Interactively asks for the subject. Subject completion is
available with the @key{TAB} key.
@kindex C-c C-i

You can insert templates when a new record is inserted. Look at the
online documentation of the @code{records-insert-template} function and
the @code{records-template-alist} variable. From Rob Tillotson, the
author of the template code:
@quotation 
In essence, with templates, records becomes a sort of ad-hoc database of
journals, bibliographic information, contact logs, and all kinds of
other random stuff. There might be advantages to keeping this kind of
stuff in an SQL server or something, but records is convenient and
easily greppable and doesn't require me to screw around with building
databases (if I need to add a field, I can just type it in)... 
@end quotation

@item records-delete-record
Key @kbd{C-c C-d}. Delete the current record for the current date.
With argument, removes the subject only, so the body is preserved. If
this is the last record on a subject, the user is asked if the subject
should be removed from the index file. If the deletion of this record
makes the file empty, the records file is deleted.
@kindex C-c C-d

@item records-rename-record
Key @kbd{C-c C-e}. Renames the subject of the current record for the
current date. Note: the key binding for this command has been changed in 
version 1.4.6.
@kindex C-c C-e

@item records-move-record
Key @kbd{C-c C-m}. Moves the current record to another date. It prompts
for the new date.
@kindex C-c C-m

@end ftable

@node Misc Commands, Records Administration, Manipulating Records, Basic Use
@section Miscellaneous Commands

@ftable @code
@item records-popup-mode-menu
Key @kbd{Button3}. When mouse is clicked on a link, popup a link-specific menu.
When mouse is clicked anywhere else, invoke the default popup menu.
@kindex Button3

@item records-goto-calendar
Key @kbd{C-c C-c}. Goto the emacs calendar with the cursor on the date
in the current record file.
@kindex C-c C-c

@item records-mark-record
Key @kbd{C-M-h}. Put mark at the end of the current record and point at
the beginning of the record subject. With non-null prefix argument, the point
is placed at the beginning of the record body.
@kindex C-M-h

@item records-link-as-kill 
Key @kbd{C-c C-k}. Put the link of the record around the current point
in the kill ring. The link can be retrieved by the @code{yank} command
(@kbd{C-y}). This function can be used to copy a record link to some
other record.
@kindex C-c C-k

@item records-underline-line
Key @kbd{C-c -}. Underline the current line to the length of the
line. This function is not really specific to records. You can use it to 
underline any text.
@kindex C-c -

@item records-insert-record-region

Key @kbd{C-x n r} Insert the region in the current buffer into today's
record. Prompts for subject.
@kindex C-x n r

@item records-insert-record-buffer

Key @kbd{C-x n b} Insert the current buffer into today's record. Prompts
for subject.
@kindex C-x n b

@item records-insert-link

Key @kbd{C-x n l} Writes the file name of the current buffer, or the url
of the current page, or the message-id of the current gnus buffer as a
records link at the end of today's record and inserts a user-specified
comment. This function can be used to bookmark files, urls or news
messages in your records file. Currently, this function is not bound to
any key. You should bind it to a global key. This function used to be
called records-insert-file-link.
@kindex C-x n l

@end ftable

@node Records Administration,  , Misc Commands, Basic Use
@section Records Administration

Administration of records involves initialization and ensuring data and
index consistency. This job is best done with an external (Perl) program 
called @file{recordsadmin}. The @file{recordsadmin} program performs the 
following jobs:

@enumerate
@item
Installs or re-installs user defaults. This is done with
@code{recordsadmin -i}. The @file{~/.emacs-records} file is created or
updated. 

@item 
Converts one date and directory format to another. This is done with
@code{recordsadmin -c}. Not everybody likes the same date format or the
same directory format. Many different formats, such as 2/4 year,
mm/dd/yy and dd/mm/yy formats are supported.

@item
Re-indexes all the records. This is sort of a records fsck that ensures
that the elisp indexing code hasn't blown things. Simply running
@file{recordsadmin} does the indexing. Run @code{recordsadmin -h} to
find out the usage.

@end enumerate

@node Advanced Use, Conclusion, Basic Use, Top
@chapter Advanced Use

This section describes the advanced records commands. 

@menu
* Organizing your TODOs::       Add TODO's to your records.
* Security::                    Securing records with encryption.
* Concatenating Records::       Collecting your past records together.
* Editing In LaTeX mode::       Editing Records In LaTeX mode.
* Editing In Outline mode::     Editing Records In Outline minor mode.
@end menu

@node Organizing your TODOs, Security, Advanced Use, Advanced Use
@section Organizing your TODOs
@cindex TODO

The records TODO allows you to keep a list of things to be done per
record. You start by creating a TODO such as the following inside a
record.

@format 
@t{
* Work
------
link: <../../99/04/042199#* Work>

"
TODO: // created on 042199
some cool things to do
rotten things to do
END_TODO
"}
@end format

@findex records-create-todo 
For your convenience, the function @code{records-create-todo} can be
used to create a new TODO. Key @kbd{C-c / t}. This function adds a
comment with the date when the TODO was created.
@kindex C-c / t

@findex records-get-todo
The piece of text within the double quotes is called a TODO. Note that
the double quotes are not part of the TODO. This TODO is written on the
21th of April, 1999. Suppose today is the 22th of April, 1999 and you
open up a new record file today with @code{records-goto-today}. Then the
TODO will be moved to today from the previous day. If you didn't create
a record file on 22th, but created one on the 23th, the TODO would be
moved from the 21th to the 23th. In general, a TODO for a subject is
moved to today from the last time (day) you wrote a TODO for the
subject. You can explicitly move TODOs with the function
@code{records-get-todo}. Key @kbd{C-c / g}. 
@kindex C-c / g

The match for a todo happens as follows:

@vindex records-todo-begin-move-regexp
@vindex records-todo-end-regexp
@example
@code{^records-todo-begin-move-regexp}
The todo text
@code{^records-todo-end-regexp.*\n}
@end example

@vindex records-todo-begin-copy-regexp 

The default value of records-todo-begin-move-regexp is "TODO: ". The
default value of records-todo-end-regexp is "END_TODO". The comment
added by @code{records-create-todo} is just part of the TODO text and
can be removed.You can change these regexps if you like. Use @kbd{C-h v}
to examine the values of these variables. You can also have multiple
TODOs within a record. If you want a todo to be copied instead of moved,
then use CTODO, instead of TODO. Look at
@code{records-todo-begin-copy-regexp}.  NOTE: the value of
@code{records-todo-begin-move-regexp, records-todo-begin-copy-regexp,
records-todo-end-regexp} has changed after records version 1.3. In fact,
these variable are no longer regexps. So if you have changed them,
beware.

@vindex records-todo-today
@vindex records-todo-next-day
@vindex records-todo-prev-day
The variable @code{records-todo-today} determines whether
@code{records-goto-today} will do TODO processing. If set to true (the
default), the TODO processing is done. If set to nil, the TODO
processing is not done. If set to any other value, the user is asked
whether TODOs should be processed. The variables
@code{records-todo-next-day} and @code{records-todo-prev-day} are
similar to @code{records-todo-today} but are invoked when traversing to
the next or the previous day. Their defaults are nil.

@vindex records-todo-delete-empty-record
When a TODO is moved from a source to a destination record and, as a
result, the source record becomes empty, then the record is deleted if
the variable @code{records-todo-delete-empty-record} is set to true (the
default).

@node Security, Concatenating Records, Organizing your TODOs, Advanced Use
@section Securing Records With Encryption

Consider the @code{Work} record of April 21st, 1999 (@pxref{What is a
Record}). That is a record I do not want my advisor to see! In
records-mode, records can be individually encrypted (and signed) using
Philip Zimmerman's PGP (Pretty Good Privacy) and the PGP mailcrypt mode
available with @code{xemacs}. Since the mailcrypt mode is not available
with @code{emacs} by default, it is included in the records distribution
under the directory @file{mailcrypt}. However, this directory will
probably not be in your load-path (@inforef{Loading,,xemacs}).
So if you don't have these packages by default, copy the files in the
@file{mailcrypt} directory into the top level records directory. The
mailcrypt version is 3.5.5 which supports PGP version 2.6, PGP version
5.0 and the GNU gpg.

By default PGP version 2.6 is used for encryption and decryption. You
can set the value of the variable mc-default-scheme to mc-scheme-pgp50
to enable PGP version 5.0.

If you don't have PGP software then you either don't care about
encryption or need to get it so you can use it with records. 

@ftable @code
@item records-encrypt-record
Key @kbd{C-c / e}. Encrypt the current record for the current user. By
default this function encrypts the whole record. With a prefix argument,
start the encryption from point to the end of record. The function
interactively asks whether the record should be signed also.
@kindex C-c / e

@item records-decrypt-record 
Key @kbd{C-c / d}. Decrypt the current record. The function asks for
your PGP passphrase (and caches the passphrase for a short time
(@inforef{Passphrase Cache,,mailcrypt}).
@kindex C-c / d
@end ftable

@node Concatenating Records, Editing In LaTeX mode, Security, Advanced Use
@section Putting Records Together

The records-mode allows concatenating several records together. These
records are put together and output in a separate emacs
buffer. Concatenation allows combining your thoughts. For instance, you
can write a weekly status report of your work by combining your records
on the @code{Work} subject for each of the days in the last week. This
assumes that you write what you do everyday, which is the very reason
you are using this software!

The records-mode allows concatenation of records and record files. Both
are concatenated in date order.

@ftable @code
@item records-concatenate-records
@vindex records-output-buffer 
Key @kbd{C-c + c}. Concatenate the current record with the records on
the same subject written in the last @var{num} days. Output these
records in the records output buffer. The name of this buffer is
contained in the variable @code{records-output-buffer}. Without prefix
argument, prompts for number of days.  An empty string will output the
current record only. A negative number will output all the past records
on the subject! Normally, the records are output in most-recent first
order. This function asks the user if the order should be reversed.
@kindex C-c + c

@item records-concatenate-records-latex
@vindex records-latex-output-buffer 
Key @kbd{C-c + l}. Concatenate the current record with the records on
the same subject written in the last @var{num} days. Output these
records in latex format in the records latex output buffer. The name of
this buffer is contained in the variable
@code{records-latex-output-buffer}. Then run latex on the
output. Without prefix argument, prompts for number of days.  An empty
string will output the current record only. A negative number will
output all the past records on the subject!  Normally, the records are
output in most-recent first order. This function asks the user if the
order should be reversed.
@kindex C-c + l

@item records-concatenate-record-files
Key @kbd{C-c + f}. Concatenate all the records in the records files of
the last @var{num} days.  All the records of a subject are collected
together. Output these records in the records output buffer (see
above). Without prefix argument, the function prompts for the number of
days. An empty string will output the records of the current file.
@kindex C-c + f

@item records-concatenate-record-files-latex
@vindex records-latex-output-buffer 
Key @kbd{C-c + r}. Concatenate all the records in the records files of
the last @var{num} days.  All the records of a subject are collected
together. Output these records in latex format in the records latex
output buffer (see above). Without prefix argument, the function prompts
for the number of days. An empty string will output the records of the
current file. This function is not implemented currently.
@kindex C-c + r
@end ftable

The records-mode concatenation related variables are shown below.

@vtable @code
@item records-output-buffer
Contains the output of concatenating records. By default,
"*RECORDS-OUTPUT*".

@item records-subject-prefix-on-concat
Prefix prepended to each subject on records concatenation. By default,
"--- ".

@item records-subject-suffix-on-concat 
Suffix appended to each subject on records concatenation. By default, " ---".

@item records-date-prefix-on-concat 
Prefix prepended to each date on records concatenation. By default, "* "

@item records-date-suffix-on-concat
Suffix appended to each date on records concatenation. By default, "".

@item records-select-buffer-on-concat 
If non-nil, the records-output-buffer is selected after records are
concatenated by the concatenation functions.  If nil, the
records-output-buffer is just displayed. By default, nil.

@item records-erase-output-buffer 
If non nil, the records-output-buffer is erased, every time the
concatenation functions are invoked.  If nil, the output is appended. By
default, nil.

@item records-latex-output-buffer
Contains the output of concatenating records in latex format. By default,
"*RECORDS-LATEX-OUTPUT*".

@item records-tex-directory
Location of latex template for records. By default,
"RECORDS-DIRECTORY/tex/".

@item records-tex-template-plain
Location of plain template for LaTeX'ing records. By default, 
"RECORDS-DIRECTORY/tex/records-templ.tex".

@item records-tex-temp-output-file
Output location for Latex runs. By default,
"RECORDS-DIRECTORY/tex/records-temp.tex".

@end vtable

@node Editing In LaTeX mode, Editing In Outline mode, Concatenating Records, Advanced Use
@section Editing Records In LaTeX mode

Records can be edited in LaTeX mode for those who insist on writing
everything in this arcane language! The latex mode can be invoked in
each record by calling @code{records-narrow-latex}. The record changes
all links and TODOs to latex compatible environments. To get out of
latex mode, use @code{records-widen-latex}.

@ftable @code
@item records-narrow-latex
Key @kbd{C-c / l}. Narrow records-file buffer to the current record and
switch to latex-mode.
@kindex C-c / l

@item records-widen-latex
Widen records-file buffer and switch from latex to records-mode. This
key is not bound by default since the buffer is now in LaTeX mode. You
will have to invoke this function in the minibuffer (@code{M-x
records-widen-latex}) to come back to records mode. Or else you can bind
the key @kbd{C-c l w} to this function in LaTeX mode as shown in the
installation section (@pxref{Installation}).

@end ftable

@node Editing In Outline mode,, Editing In LaTeX mode, Advanced Use
@section Editing Records In Outline mode

Records can be edited in Outline mode. The outline minor mode is toggled
by calling @code{records-outline-mode}.

@ftable @code
@item records-outline-mode
Key @kbd{C-c / o}.
@kindex C-c / o
@end ftable

@vindex records-start-in-outline-mode
If the variable @code{records-start-in-outline-mode} is set to true,
records files will start up in outline minor mode.

@node Conclusion, Variable Index, Advanced Use, Top
@chapter Conclusions and Acknowledgments

As promised, @emph{records-mode} for emacs allows creation of an online
diary with extensive linking and indexing facilities. This diary has in
fact become my major desktop tool. I write most of my documents, small
and large, as records distributed over different days and records-mode
does the tracking for me. If you have noticed, records provides an
editor and a browser all in one. You can browse your records with
automatically generated records links, and you can also edit the
contents of your records.

This software was originally inspired by John Heidemann's notes-mode

@noindent
@uref{http://www.isi.edu/~johnh/SOFTWARE/NOTES_MODE/index.html}. This
version enhances the original notes system by adding several features
that John hasn't had time to add. The main addition is that indexing is
done on the fly so that indexes are current as you add or delete new
records. John's notes mode updates indexes in the background (say,
daily) and I found that inconvenient. 

Kaarthik Sivakumar @email{sivakuma@@mail.eecis.udel.edu} insisted on
documentation and that forced me to write the info pages.

Please send me mail at @email{xma@@gnu.org} if you find this software
useful.

@node Variable Index, Concept Index, Conclusion, Top
@unnumbered Variable Index

@c @printindex vr seems to screw up in the printed mode
@ifinfo
@printindex vr
@end ifinfo

@node Concept Index, Key Index, Variable Index, Top
@unnumbered Concept and Function Index

@printindex cp

@node Key Index,  , Concept Index, Top
@unnumbered Key Index

@printindex ky

@contents
@bye
@c  LocalWords:  setfilename settitle setchapternewpage syncodeindex fn cp DIR
@c  LocalWords:  iftex finalout ifinfo titlepage vskip pt filll dir emph cindex
@c  LocalWords:  url www cse edu README elisp recordsadmin untarred ya noindent
@c  LocalWords:  gzip'ed Perl bindir samp Ctrl abbrev pxref findex dfn kbd prev
@c  LocalWords:  modeline TODO Misc vindex fontify ftable kindex RET greping dd
@c  LocalWords:  yy fsck TODO's todo TODOs regexp regexps CTODO PGP mailcrypt
@c  LocalWords:  xemacs passphrase printindex vr ky texinfo uref yahoo com var
@c  LocalWords:  inforef num vtable concat Heidemann's isi johnh Kaarthik eecis
@c  LocalWords:  Sivakumar sivakuma udel uncomment Makefile CVS autoconf okay
@c  LocalWords:  emacs goto LaTeX clw filladapt imenu popup traversal fontified
@c  LocalWords:  traversal's fontification http html href deja alist Tillotson
@c  LocalWords:  hoc SQL greppable urls th gpg decryption mc pgp decrypt tex
@c  LocalWords:  prepended LaTeX'ing minibuffer
